
# Find EBS Volumes by using tags
aws ec2 describe-volumes --region us-east-1 --filters Name=tag:app,Values=coffee | jqÂ .Volumes[].VolumeId | sed 's/\"//g'
aws ec2 describe-volumes --region us-east-1 --filters Name=tag:app,Values=smart | jq .Volumes[].VolumeId | sed 's/\"//g'

# sync/download files from s3 bucket to local folder
aws s3 sync s3://vzshellscripts /tmp/dbbackup

# Find EBS volumes by instance#
aws ec2 describe-volumes --region us-east-1 --filters Name=attachment.instance-id,Values=i-0ab1e5f11176cd028 | jq .Volumes[].VolumeId | sed 's/\"//g'

# Find all the EBS Values with instance# declaratio
instance_id=$(wget -q -O- http://169.254.169.254/latest/meta-data/instance-id)
aws ec2 describe-volumes --region us-east-1 --filters Name=attachment.instance-id,Values=$instance_id | jq .Volumes[].VolumeId | sed 's/\"//g'

# Jenkins Parametarized build using Tag, Values input
aws ec2 describe-volumes --region us-east-1 --filters Name=tag:$tag,Values=$Values | jq .Volumes[].VolumeId | sed 's/\"//g']

## You can achieve the same thing from the CLI tools. Set the necessary environment variables:
export EC2_PRIVATE_KEY=/root/pk-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.pem 
export EC2_CERT=/root/cert-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.pem

# Find EBS Volume ID to linux device id:
ec2-describe-instances `curl -s http://169.254.169.254/latest/meta-data/instance-id` | grep BLOCKDEVICE

BLOCKDEVICE     /dev/sda1       vol-xxxxxxxx    2011-11-13T21:09:53.000Z
BLOCKDEVICE     /dev/sdf        vol-xxxxxxxx    2011-11-13T21:09:53.000Z
BLOCKDEVICE     /dev/sdg        vol-xxxxxxxx    2011-11-13T21:09:53.000Z

## This will assign $INSTANCE_ID to your instance-id, and $INSTANCE_EBS_VOL to the volume name, which then you can use for other scripts.
export INSTANCE_ID=$(wget -q -O - http://169.254.169.254/latest/meta-data/instance-id)
export INSTANCE_EBS_VOL=$(ec2-describe-instances $INSTANCE_ID | awk '/vol-*/ {print $3}')


